// Automatically generated by MockGen. DO NOT EDIT!
// Source: cache.go

package fizzbuzz

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Cache interface
type MockCache struct {
	ctrl     *gomock.Controller
	recorder *_MockCacheRecorder
}

// Recorder for MockCache (not exported)
type _MockCacheRecorder struct {
	mock *MockCache
}

func NewMockCache(ctrl *gomock.Controller) *MockCache {
	mock := &MockCache{ctrl: ctrl}
	mock.recorder = &_MockCacheRecorder{mock}
	return mock
}

func (_m *MockCache) EXPECT() *_MockCacheRecorder {
	return _m.recorder
}

func (_m *MockCache) Put(key int, value string) {
	_m.ctrl.Call(_m, "Put", key, value)
}

func (_mr *_MockCacheRecorder) Put(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Put", arg0, arg1)
}

func (_m *MockCache) Get(key int) (string, bool) {
	ret := _m.ctrl.Call(_m, "Get", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

func (_mr *_MockCacheRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}
